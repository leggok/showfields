// Settings
// ==================================================
$hamburger-padding-x           : 15px !default;
$hamburger-padding-y           : 15px !default;
$hamburger-layer-width         : 40px !default;
$hamburger-layer-height        : 4px !default;
$hamburger-layer-spacing       : 6px !default;
$hamburger-layer-color         : #fff !default;
$hamburger-layer-border-radius : 4px !default;
$hamburger-hover-opacity       : 0.7 !default;
$hamburger-active-layer-color  : $hamburger-layer-color !default;
$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter   : false !default;
$hamburger-hover-filter       : opacity(50%) !default;
$hamburger-active-hover-filter: $hamburger-hover-filter !default;

.hamburger {
    padding: $hamburger-padding-y $hamburger-padding-x;
    display: inline-block;
    cursor: pointer;
  
    -webkit-transition-property: opacity, -webkit-filter;
  
    transition-property: opacity, -webkit-filter;
  
    -o-transition-property: opacity, filter;
  
    transition-property: opacity, filter;
  
    transition-property: opacity, filter, -webkit-filter;
    -webkit-transition-duration: 0.15s;
         -o-transition-duration: 0.15s;
            transition-duration: 0.15s;
    -webkit-transition-timing-function: linear;
         -o-transition-timing-function: linear;
            transition-timing-function: linear;
  
    // Normalize (<button>)
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;
  
    &:hover {
      @if $hamburger-hover-use-filter == true {
        -webkit-filter: $hamburger-hover-filter;
                filter: $hamburger-hover-filter;
      }
      @else {
        opacity: $hamburger-hover-opacity;
      }
    }
  
    &.is-active {
      &:hover {
        @if $hamburger-hover-use-filter == true {
          -webkit-filter: $hamburger-active-hover-filter;
                  filter: $hamburger-active-hover-filter;
        }
        @else {
          opacity: $hamburger-active-hover-opacity;
        }
      }
  
      .hamburger-inner,
      .hamburger-inner::before,
      .hamburger-inner::after {
        background-color: $hamburger-active-layer-color;
      }
    }
  }
  
  .hamburger-box {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
    display: inline-block;
    position: relative;
  }
  
  .hamburger-inner {
    display: block;
    top: 50%;
    margin-top: $hamburger-layer-height / -2;
  
    &,
    &::before,
    &::after {
      width: $hamburger-layer-width;
      height: $hamburger-layer-height;
      background-color: $hamburger-layer-color;
      border-radius: $hamburger-layer-border-radius;
      position: absolute;
      -webkit-transition-property: -webkit-transform;
      transition-property: -webkit-transform;
      -o-transition-property: transform;
      transition-property: transform;
      transition-property: transform, -webkit-transform;
      -webkit-transition-duration: 0.15s;
           -o-transition-duration: 0.15s;
              transition-duration: 0.15s;
      -webkit-transition-timing-function: ease;
           -o-transition-timing-function: ease;
              transition-timing-function: ease;
    }
  
    &::before,
    &::after {
      content: "";
      display: block;
    }
  
    &::before {
      top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }
  
    &::after {
      bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }
}

.hamburger--elastic {
    .hamburger-inner {
      top: $hamburger-layer-height / 2;
      -webkit-transition-duration: 0.275s;
           -o-transition-duration: 0.275s;
              transition-duration: 0.275s;
      -webkit-transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
           -o-transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
              transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);

      &::before {
        top: $hamburger-layer-height + $hamburger-layer-spacing;
        -webkit-transition: opacity 0.125s 0.275s ease;
        -o-transition: opacity 0.125s 0.275s ease;
        transition: opacity 0.125s 0.275s ease;
      }

      &::after {
        top: ($hamburger-layer-height * 2) + ($hamburger-layer-spacing * 2);
        -webkit-transition: -webkit-transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        transition: -webkit-transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        -o-transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55), -webkit-transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
      }
    }

    &.is-active {
      .hamburger-inner {
        $y-offset: $hamburger-layer-spacing + $hamburger-layer-height;

        -webkit-transform: translate3d(0, $y-offset, 0) rotate(135deg);

                transform: translate3d(0, $y-offset, 0) rotate(135deg);
        -webkit-transition-delay: 0.075s;
             -o-transition-delay: 0.075s;
                transition-delay: 0.075s;

        &::before {
          -webkit-transition-delay: 0s;
               -o-transition-delay: 0s;
                  transition-delay: 0s;
          opacity: 0;
        }

        &::after {
          -webkit-transform: translate3d(0, $y-offset * -2, 0) rotate(-270deg);
                  transform: translate3d(0, $y-offset * -2, 0) rotate(-270deg);
          -webkit-transition-delay: 0.075s;
               -o-transition-delay: 0.075s;
                  transition-delay: 0.075s;
        }
      }
    }
  }
